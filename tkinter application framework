import random
import numpy as np
import pandas as pd
import random
import os
import tensorflow as tf
import cv2
import matplotlib.pyplot as plt
import shutil
import math
from tkinter import messagebox
from tkinter import *
from tkinter import simpledialog
import tkinter
from tkinter import filedialog
import matplotlib.pyplot as plt
import numpy as np
from tkinter.filedialog import askopenfilename
from tkinter.filedialog import askdirectory
import cv2
from sklearn.model_selection import train_test_split
main = tkinter.Tk()
main.title("COVID CLASSIFICATION") 
main.geometry("1300x1200")
global cls
def start():
	global cls
	text.insert(END,"------The process has begun------"+"\n\n")
	train_positive_path=os.path.join('train/positive')
	train_negative_path=os.path.join('train/negative')
	test_positive_path=os.path.join('test/positive')
	test_negative_path=os.path.join('test/negative')
	train_pos_imgs=[]
	for filename in os.listdir(train_positive_path):
		img = cv2.imread(os.path.join(train_positive_path,filename))
		downsize = cv2.resize(img, (128,128), interpolation = cv2.INTER_NEAREST)
		train_pos_imgs.append(downsize)
	test_pos_imgs=[]
	for filename in os.listdir(test_positive_path):
		img = cv2.imread(os.path.join(test_positive_path,filename))
		downsize = cv2.resize(img, (128,128), interpolation = cv2.INTER_NEAREST)    
		test_pos_imgs.append(downsize)
	train_neg_imgs=[]
	for filename in os.listdir(train_negative_path):
		img = cv2.imread(os.path.join(train_negative_path,filename))
		downsize = cv2.resize(img, (128,128), interpolation = cv2.INTER_NEAREST)
		train_neg_imgs.append(downsize)
	test_neg_imgs=[]
	for filename in os.listdir(test_negative_path):
		img = cv2.imread(os.path.join(test_negative_path,filename))
		downsize = cv2.resize(img, (128,128), interpolation = cv2.INTER_NEAREST)
		test_neg_imgs.append(downsize)


	
	
def close():
    main.destroy()	
	

font = ('times', 16, 'bold')
title = Label(main, text='COVID CLASSIFICATION')
title.config(bg='deep sky blue', fg='white')  
title.config(font=font)           
title.config(height=3, width=120)       
title.place(x=0,y=5)

font1 = ('times', 12, 'bold')
text=Text(main,height=20,width=150)
scroll=Scrollbar(text)
text.configure(yscrollcommand=scroll.set)
text.place(x=50,y=120)
text.config(font=font1)

font1 = ('times', 13, 'bold')
uploadButton = Button(main, text="Start Processing Data", command=start)
uploadButton.place(x=50,y=550)
uploadButton.config(font=font1)  

processButton = Button(main, text="Upload and Test", command=upload)
processButton.place(x=250,y=550)
processButton.config(font=font1) 

featuresButton = Button(main, text="Exit", command=exit)
featuresButton.place(x=650,y=550)
featuresButton.config(font=font1)



main.config(bg='LightSteelBlue3')
main.mainloop()
